<?xml version="1.0" encoding="UTF-8"?>
<tasklist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../tasklist_schema.xsd" name="Deploy GNUnet fc14">
  <options/>
  <run name="check peer" id="1" enabled="true">
    <command>sudo -S date</command>
    <arguments></arguments>
    <timeout>10</timeout>
    <expected_return_code>0</expected_return_code>
    <expected_output>2014</expected_output>
    <stop_on_fail>true</stop_on_fail>
  </run>
  <sequence name="" enabled="true">
    <run name="Install dependencies with yum : gcc" id="1" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gcc</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : make" id="2" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>make</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : autoconf" id="3" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>autoconf</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : gettext-devel" id="4" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gettext-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : texinfo" id="5" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>texinfo</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : libunistring-devel" id="6" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libunistring-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : gnutls-devel" id="7" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gnutls-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : zlib-devel" id="9" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>zlib-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : sqlite-devel" id="10" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>sqlite-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : postgresql-devel" id="11" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>postgresql-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : mysql-devel" id="12" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>mysql-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : libgsf-devel" id="13" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libgsf-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : libvorbis-devel" id="14" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libvorbis-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="true">
    <run name="Install dependencies with yum : subversion" id="1" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>subversion</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : sqlite-devel" id="2" enabled="true">
      <command>sudo yum -y -t --nogpgcheck install</command>
      <arguments>sqlite-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Install dependencies with yum : libidn-devel" id="3" enabled="true">
      <command>sudo yum -y -t --nogpgcheck install</command>
      <arguments>libidn-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="true">
    <run name="Download libtool" id="1" enabled="true">
      <command>mkdir libtool; cd libtool; wget</command>
      <arguments>http://ftp.gnu.org/gnu/libtool/libtool-2.4.2.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Unpack libtool" id="2" enabled="true">
      <command>cd libtool; tar xfvz</command>
      <arguments>libtool-2.4.2.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure libtool" id="3" enabled="true">
      <command>cd libtool/libtool-2.4.2; ./configure</command>
      <arguments>--prefix=/usr/local</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install libtool" id="4" enabled="true">
      <command>cd libtool/libtool-2.4.2; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="false">
    <run name="Download libcurl" id="1" enabled="true">
      <command>mkdir libcurl; cd libcurl; wget</command>
      <arguments>http://curl.haxx.se/download/curl-7.26.0.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Unpack libcurl" id="2" enabled="true">
      <command>cd libcurl; tar -xzvf</command>
      <arguments>curl-7.26.0.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure libcurl" id="3" enabled="true">
      <command>cd libcurl/curl-7.26.0; ./configure</command>
      <arguments>--with-gnutls</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install libcurl" id="4" enabled="true">
      <command>cd libcurl/curl-7.26.0; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="false">
    <run name="Download glpk" id="1" enabled="true">
      <command>mkdir glpk; cd glpk; wget</command>
      <arguments>http://ftp.gnu.org/gnu/glpk/glpk-4.47.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Unpack glpk" id="2" enabled="true">
      <command>cd glpk; tar -xzvf</command>
      <arguments>glpk-4.47.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure glpk" id="3" enabled="true">
      <command>cd glpk/glpk-4.47; ./configure</command>
      <arguments>--with-gnutls</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install glpk" id="4" enabled="true">
      <command>cd glpk/glpk-4.47; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="false">
    <run name="Download libextractor-0.6.3" id="1" enabled="true">
      <command>mkdir libextractor; cd libextractor; wget</command>
      <arguments>ftp://ftp.gnu.org/gnu/libextractor/libextractor-0.6.3.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Unpack libextractor" id="2" enabled="true">
      <command>cd libextractor; tar -xzvf</command>
      <arguments>libextractor-0.6.3.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure libextractor" id="3" enabled="true">
      <command>cd libextractor/libextractor-0.6.3; ./configure</command>
      <arguments>--prefix=/usr/local</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install libextractor" id="4" enabled="true">
      <command>cd libextractor/libextractor-0.6.3; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
    <sequence name="" enabled="true">
    <run name="Download libextractor-1.3" id="1" enabled="true">
      <command>mkdir libextractor; cd libextractor; wget</command>
      <arguments>ftp://ftp.gnu.org/gnu/libextractor/libextractor-1.3.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Unpack libextractor" id="2" enabled="true">
      <command>cd libextractor; tar -xzvf</command>
      <arguments>libextractor-1.3.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure libextractor" id="3" enabled="true">
      <command>cd libextractor/libextractor-1.3; ./configure</command>
      <arguments>--prefix=/usr/local</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install libextractor" id="4" enabled="true">
      <command>cd libextractor/libextractor-1.3; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="false">
    <run name="Download Extractor" id="1" enabled="true">
      <command>svn checkout</command>
      <arguments>https://gnunet.org/svn/Extractor</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>false</stop_on_fail>
    </run>
    <run name="Bootstrap Extractor" id="2" enabled="true">
      <command>cd Extractor; libtoolize; ./bootstrap</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure Extractor" id="3" enabled="true">
      <command>cd Extractor; ./configure</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install Extractor" id="4" enabled="true">
      <command>cd Extractor; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="true">
    <run name="Download libmicrohttpd" id="1" enabled="true">
      <command>svn checkout</command>
      <arguments>https://gnunet.org/svn/libmicrohttpd</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Bootstrap libmicrohttpd" id="2" enabled="true">
      <command>cd libmicrohttpd; libtoolize; ./bootstrap</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure libmicrohttpd" id="3" enabled="true">
      <command>cd libmicrohttpd; ./configure</command>
      <arguments>--with-gnutls=/usr --enable-messages --enable-curl</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install libmicrohttpd" id="4" enabled="true">
      <command>cd libmicrohttpd; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="true">
    <run name="Download GNUnet" id="1" enabled="true">
      <command>svn checkout</command>
      <arguments>https://gnunet.org/svn/gnunet</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Bootstrap GNUnet" id="2" enabled="true">
      <command>cd gnunet; libtoolize; ./bootstrap</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure GNUnet" id="3" enabled="true">
      <command>cd gnunet; ./configure</command>
      <arguments>--with-extractor=/usr/local --with-gcrypt=/usr/local --with-mysql=/usr/lib/mysql --enable-logging=verbose</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install GNUnet" id="4" enabled="true">
      <command>cd gnunet; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="" enabled="true">
    <run name="Create GNUnet directory" id="1" enabled="true">
      <command>mkdir .gnunet; touch .gnunet/gnunet.conf</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Set GNUNET_PREFIX" id="2" enabled="true">
      <command>echo -e "export GNUNET_PREFIX=/usr/local\n" &gt;&gt; ~/.bashrc</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="Run ldconfig" enabled="true">
    <run name="Run ldconfig" id="1" enabled="true">
      <command>sudo -S ldconfig</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
</tasklist>
