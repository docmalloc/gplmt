<?xml version="1.0" encoding="UTF-8"?>
<tasklist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../tasklist_schema.xsd" name="Install GUIX Fedora 14">
  <options/>
  <sequence name="Installing Guile (dependency)" enabled="true">
    <run name="Installing gcc" id="1" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gcc</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing libtool" id="2" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libtool</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing libltdl" id="3" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libtool-ltdl-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing GNU MP" id="4" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gmp-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing libunistring" id="5" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libunistring-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing libffi" id="6" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libffi-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing libgc" id="7" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gc-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Installing make" id="8" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>make</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Get Guile" id="9" enabled="true">
      <command>wget</command>
      <arguments>ftp://ftp.gnu.org/gnu/guile/guile-2.0.5.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Export guile archive" id="10" enabled="true">
      <command>tar xvzf</command>
      <arguments>guile-2.0.5.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Configure guile" id="11" enabled="true">
      <command>cd guile-2.0.5; ./configure</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Make guile" id="12" enabled="true">
      <command>cd guile-2.0.5; make</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="Install guile" id="13" enabled="true">
      <command>cd guile-2.0.5; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="Other GUIX dependencies" enabled="true">
    <run name="install libgcrypt" id="1" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libgcrypt-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="install 1sqlite3" id="2" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>libsqlite3x-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="install libbz2" id="3" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>bzip2-devel</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="install g++" id="4" enabled="true">
      <command>sudo -S yum -y -t --nogpgcheck install</command>
      <arguments>gcc-c++</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="GUIX installation" enabled="true">
    <run name="get guix" id="1" enabled="true">
      <command>wget</command>
      <arguments>https://gnunet.org/eclectic/guix-0.6.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="export archive" id="2" enabled="true">
      <command>tar xvzf</command>
      <arguments>guix-0.6.tar.gz</arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="configure" id="3" enabled="true">
      <command>export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig; cd guix-0.6; ./configure</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="make" id="4" enabled="true">
      <command>cd guix-0.6; make</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="make install" id="5" enabled="true">
      <command>cd guix-0.6; sudo -S make install</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
  <sequence name="GUIX configuration" enabled="true">
    <run name="create builder group" id="1" enabled="true">
      <command>sudo -S groupadd guix-builder</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="create builders" id="2" enabled="true">
      <command>for i in `seq 1 10`; do sudo -S useradd -g guix-builder -G guix-builder -d /var/empty -s `which nologin` -c "Guix build user $i" guix-builder$i; done</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="create necessary directories" id="3" enabled="true">
      <command>sudo -S mkdir -p /usr/local/var/nix/profiles/per-user; sudo -S chmod 777 /usr/local/var/nix/profiles/per-user; sudo -S mkdir -p /nix/store; sudo -S chgrp 504 /nix/store; sudo -S chmod 1775 /nix/store</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
    <run name="add guix bin to path" id="4" enabled="true">
      <command>echo 'export PATH=$PATH:$HOME/.guix-profile/bin' &gt;&gt; .bash_profile</command>
      <arguments></arguments>
      <timeout>0</timeout>
      <expected_return_code>0</expected_return_code>
      <expected_output></expected_output>
      <stop_on_fail>true</stop_on_fail>
    </run>
  </sequence>
</tasklist>
