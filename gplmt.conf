[gplmt]
#nodes = contrib/test_node.nodes
# Which notification mechanism to use: 
# simple: print messages to stdout
#notification = simple
notification = result
tasks = contrib/tasklists/check_node.xml
# Number of parallel workers, use 0 for unlimited
#max_parallelism = 100
# If set, the userdir directory will be used for get/put operations
#userdir = /home/gplmt/
# Default target to execute experiment on [local|planetlab|remote_ssh]
# target = planetlab


[planetlab]
slice = tumple_gnunet
# Configuration for Planetlab API
# Use PlanetLab nodes instead of nodes file
use_pl_nodes = yes
# PlanetLab Europe
api_url = https://www.planet-lab.eu/PLCAPI/
# Planetlab
#api_url = https://www.planet-lab.org/PLCAPI/

# Authentication
pl_keyfile = <keyfile>
pl_keyfile_password = <password>

# Planetlab username
username = <pl_username>
# Planetlab password
password = <pl_pw>

[ssh]
# Order of ssh authentication:
#
# The ssh_keyfile_filename passed in (if any)
# Any key we can find through an SSH agent
# Any "id_rsa" or "id_dsa" key discoverable in ~/.ssh/
# Plain password auth, if a ssh_password was given
#ssh_keyfile = <keyfile>
ssh_password = <password>
# protocoll for put get operations (Planetlab does not support SFTP)
ssh_transfer = scp
#ssh_transfer = sftp
# Use system's SSH "known hosts" file
ssh_use_known_hosts = yes
# Add node hostkeys automatically
add_unkown_hostkeys = yes

[buildbot]
# configuration template
template = ../../gplmt/contrib/master_template.cfg
result_task_file = result.tasks
result_cfg = result.cfg
buildbot_command = buildslave create-slave ./bot
master = gnunet.org:9990
slaveport = 9990
webport = 8011
# set to "yes" to allow force building
force_enable = no
force_user = <force_user>
force_pw = <force_pw>


